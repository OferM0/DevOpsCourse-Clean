name: 🚀 CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  docker-build-and-push:
    name: 🛠️ Build and Push Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🔐 Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 🐳 Build backend image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/devopscourse-backend:latest ./backend

      - name: 🐳 Build frontend image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/devopscourse-frontend:latest ./frontend

      - name: 📤 Push backend image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/devopscourse-backend:latest

      - name: 📤 Push frontend image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/devopscourse-frontend:latest
      
      - name: 🔧 Install Docker on VM (if missing)
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            if ! command -v docker >/dev/null 2>&1; then
              echo "🔧 Installing Docker..."
              curl -fsSL https://get.docker.com | sh
              sudo usermod -aG docker $USER
            else
              echo "✅ Docker already installed."
            fi
            
      - name: 📂 Copy docker-compose.yml to VM
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.VM_SSH_KEY }}
          source: "docker-compose.yml"
          target: "/home/${{ secrets.VM_USERNAME }}/"

      - name: 🚀 Deploy application on VM
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            cd /home/${{ secrets.VM_USERNAME }}

            echo "🛑 Stopping old containers (if running)..."
            sudo docker-compose down || true

            echo "📥 Pulling latest images..."
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/devopscourse-backend:latest
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/devopscourse-frontend:latest

            echo "🚀 Starting updated containers..."
            sudo docker-compose up -d


